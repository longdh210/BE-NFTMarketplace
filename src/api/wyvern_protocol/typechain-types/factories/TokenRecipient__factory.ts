/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenRecipient,
  TokenRecipientInterface,
} from "../TokenRecipient";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceivedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "ReceivedTokens",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "receiveApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610361806100206000396000f3fe60806040526004361061001e5760003560e01c80638f4ffcb114610055575b60405134815233907fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf19060200160405180910390a2005b34801561006157600080fd5b506100756100703660046101c9565b610077565b005b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018590528391908216906323b872dd906064016020604051808303816000875af11580156100cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f391906102a5565b6101435760405162461bcd60e51b815260206004820152601b60248201527f455243323020746f6b656e207472616e73666572206661696c65640000000000604482015260640160405180910390fd5b826001600160a01b0316856001600160a01b03167fd65b48fd35864b3528d38e44760be5553248f89bf3ff6b06cca57817cc2650bf86856040516101889291906102ce565b60405180910390a35050505050565b80356001600160a01b03811681146101ae57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156101df57600080fd5b6101e885610197565b9350602085013592506101fd60408601610197565b9150606085013567ffffffffffffffff8082111561021a57600080fd5b818701915087601f83011261022e57600080fd5b813581811115610240576102406101b3565b604051601f8201601f19908116603f01168101908382118183101715610268576102686101b3565b816040528281528a602084870101111561028157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000602082840312156102b757600080fd5b815180151581146102c757600080fd5b9392505050565b82815260006020604081840152835180604085015260005b81811015610302578581018301518582016060015282016102e6565b81811115610314576000606083870101525b50601f01601f19169290920160600194935050505056fea2646970667358221220863dd6c7caed1d32ca9219762299ac30c8638218cb3a436c352a9d7b937eb55c64736f6c634300080b0033";

type TokenRecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenRecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenRecipient__factory extends ContractFactory {
  constructor(...args: TokenRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenRecipient> {
    return super.deploy(overrides || {}) as Promise<TokenRecipient>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenRecipient {
    return super.attach(address) as TokenRecipient;
  }
  connect(signer: Signer): TokenRecipient__factory {
    return super.connect(signer) as TokenRecipient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenRecipientInterface {
    return new utils.Interface(_abi) as TokenRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenRecipient {
    return new Contract(address, _abi, signerOrProvider) as TokenRecipient;
  }
}
