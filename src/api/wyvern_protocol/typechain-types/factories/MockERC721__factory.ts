/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "creators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdPointer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806003815260200162195cdd60ea1b815250604051806040016040528060038152602001621154d560ea1b815250816000908051906020019062000062929190620000f1565b50805162000078906001906020840190620000f1565b505050620000956200008f6200009b60201b60201c565b6200009f565b620001d4565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ff9062000197565b90600052602060002090601f0160209004810192826200012357600085556200016e565b82601f106200013e57805160ff19168380011785556200016e565b828001600101855582156200016e579182015b828111156200016e57825182559160200191906001019062000151565b506200017c92915062000180565b5090565b5b808211156200017c576000815560010162000181565b600181811c90821680620001ac57607f821691505b60208210811415620001ce57634e487b7160e01b600052602260045260246000fd5b50919050565b611b4780620001e46000396000f3fe6080604052600436106101355760003560e01c8063715018a6116100ab578063c87b56dd1161006f578063c87b56dd1461034d578063cb7125351461036d578063cd53d08e1461038d578063d0def521146103c3578063e985e9c5146103d6578063f2fde38b1461041f57600080fd5b8063715018a6146102c55780638da5cb5b146102da57806395d89b41146102f8578063a22cb4651461030d578063b88d4fde1461032d57600080fd5b806326232a2e116100fd57806326232a2e1461020b5780633740ebb31461022f5780633b3a1a7a1461024f57806342842e0e146102655780636352211e1461028557806370a08231146102a557600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806323b872dd146101eb575b600080fd5b34801561014657600080fd5b5061015a610155366004611555565b61043f565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610491565b60405161016691906115ca565b34801561019d57600080fd5b506101b16101ac3660046115dd565b610523565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611612565b6105bd565b005b3480156101f757600080fd5b506101e961020636600461163c565b6106d3565b34801561021757600080fd5b5061022160095481565b604051908152602001610166565b34801561023b57600080fd5b50600a546101b1906001600160a01b031681565b34801561025b57600080fd5b5061022160075481565b34801561027157600080fd5b506101e961028036600461163c565b610704565b34801561029157600080fd5b506101b16102a03660046115dd565b61071f565b3480156102b157600080fd5b506102216102c0366004611678565b610796565b3480156102d157600080fd5b506101e961081d565b3480156102e657600080fd5b506006546001600160a01b03166101b1565b34801561030457600080fd5b50610184610883565b34801561031957600080fd5b506101e9610328366004611693565b610892565b34801561033957600080fd5b506101e96103483660046116e5565b6108a1565b34801561035957600080fd5b506101846103683660046115dd565b6108d9565b34801561037957600080fd5b506101e961038836600461163c565b6109c1565b34801561039957600080fd5b506101b16103a83660046115dd565b6008602052600090815260409020546001600160a01b031681565b6102216103d13660046117c1565b610a47565b3480156103e257600080fd5b5061015a6103f1366004611844565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561042b57600080fd5b506101e961043a366004611678565b610b5a565b60006001600160e01b031982166380ac58cd60e01b148061047057506001600160e01b03198216635b5e139f60e01b145b8061048b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104a090611877565b80601f01602080910402602001604051908101604052809291908181526020018280546104cc90611877565b80156105195780601f106104ee57610100808354040283529160200191610519565b820191906000526020600020905b8154815290600101906020018083116104fc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105c88261071f565b9050806001600160a01b0316836001600160a01b031614156106365760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610598565b336001600160a01b0382161480610652575061065281336103f1565b6106c45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610598565b6106ce8383610c25565b505050565b6106dd3382610c93565b6106f95760405162461bcd60e51b8152600401610598906118b2565b6106ce838383610d8a565b6106ce838383604051806020016040528060008152506108a1565b6000818152600260205260408120546001600160a01b03168061048b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610598565b60006001600160a01b0382166108015760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610598565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146108775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610598565b6108816000610f2a565b565b6060600180546104a090611877565b61089d338383610f7c565b5050565b6108ab3383610c93565b6108c75760405162461bcd60e51b8152600401610598906118b2565b6108d38484848461104b565b50505050565b6000818152600260205260409020546060906001600160a01b03166109585760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610598565b600061096f60408051602081019091526000815290565b9050600081511161098f57604051806020016040528060008152506109ba565b806109998461107e565b6040516020016109aa929190611903565b6040516020818303038152906040525b9392505050565b6109f660405180604001604052806014815260200173151c985b9cd9995c88199c9bdb4818d85b1b195960621b81525061117c565b610a216040518060400160405280600981526020016853656e64657220257360b81b815250336111bf565b610a2a83611204565b610a3382611204565b610a3c8161124c565b6106ce8383836106d3565b6000600954341015610a9b5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742066756e647320746f206d696e742e00000000006044820152606401610598565b600754610aa9906001611948565b6007819055610ab88582611291565b600a546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610af1573d6000803e3d6000fd5b506000818152600860205260409081902080546001600160a01b0319163390811790915590517f997115af5924f5e38964c6d65c804d4cb85129b65e62eb20a8ca6329dbe57e1891610b4a918491899189918991611960565b60405180910390a1949350505050565b6006546001600160a01b03163314610bb45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610598565b6001600160a01b038116610c195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610598565b610c2281610f2a565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c5a8261071f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610d0c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610598565b6000610d178361071f565b9050806001600160a01b0316846001600160a01b03161480610d525750836001600160a01b0316610d4784610523565b6001600160a01b0316145b80610d8257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610d9d8261071f565b6001600160a01b031614610e055760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610598565b6001600160a01b038216610e675760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610598565b610e72600082610c25565b6001600160a01b0383166000908152600360205260408120805460019290610e9b9084906119b5565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ec9908490611948565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610fde5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610598565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611056848484610d8a565b611062848484846112ab565b6108d35760405162461bcd60e51b8152600401610598906119cc565b6060816110a25750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110cc57806110b681611a1e565b91506110c59050600a83611a4f565b91506110a6565b60008167ffffffffffffffff8111156110e7576110e76116cf565b6040519080825280601f01601f191660200182016040528015611111576020820181803683370190505b5090505b8415610d82576111266001836119b5565b9150611133600a86611a63565b61113e906030611948565b60f81b81838151811061115357611153611a77565b60200101906001600160f81b031916908160001a905350611175600a86611a4f565b9450611115565b610c228160405160240161119091906115ca565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526113a9565b61089d82826040516024016111d5929190611a8d565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526113a9565b6040516001600160a01b0382166024820152610c229060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526113a9565b610c228160405160240161126291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b1790526113a9565b61089d8282604051806020016040528060008152506113ca565b60006001600160a01b0384163b1561139e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112ef903390899088908890600401611ab7565b6020604051808303816000875af192505050801561132a575060408051601f3d908101601f1916820190925261132791810190611af4565b60015b611384573d808015611358576040519150601f19603f3d011682016040523d82523d6000602084013e61135d565b606091505b50805161137c5760405162461bcd60e51b8152600401610598906119cc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d82565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6113d483836113fd565b6113e160008484846112ab565b6106ce5760405162461bcd60e51b8152600401610598906119cc565b6001600160a01b0382166114535760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610598565b6000818152600260205260409020546001600160a01b0316156114b85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610598565b6001600160a01b03821660009081526003602052604081208054600192906114e1908490611948565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c2257600080fd5b60006020828403121561156757600080fd5b81356109ba8161153f565b60005b8381101561158d578181015183820152602001611575565b838111156108d35750506000910152565b600081518084526115b6816020860160208601611572565b601f01601f19169290920160200192915050565b6020815260006109ba602083018461159e565b6000602082840312156115ef57600080fd5b5035919050565b80356001600160a01b038116811461160d57600080fd5b919050565b6000806040838503121561162557600080fd5b61162e836115f6565b946020939093013593505050565b60008060006060848603121561165157600080fd5b61165a846115f6565b9250611668602085016115f6565b9150604084013590509250925092565b60006020828403121561168a57600080fd5b6109ba826115f6565b600080604083850312156116a657600080fd5b6116af836115f6565b9150602083013580151581146116c457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156116fb57600080fd5b611704856115f6565b9350611712602086016115f6565b925060408501359150606085013567ffffffffffffffff8082111561173657600080fd5b818701915087601f83011261174a57600080fd5b81358181111561175c5761175c6116cf565b604051601f8201601f19908116603f01168101908382118183101715611784576117846116cf565b816040528281528a602084870101111561179d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000604084860312156117d657600080fd5b6117df846115f6565b9250602084013567ffffffffffffffff808211156117fc57600080fd5b818601915086601f83011261181057600080fd5b81358181111561181f57600080fd5b87602082850101111561183157600080fd5b6020830194508093505050509250925092565b6000806040838503121561185757600080fd5b611860836115f6565b915061186e602084016115f6565b90509250929050565b600181811c9082168061188b57607f821691505b602082108114156118ac57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611915818460208801611572565b835190830190611929818360208801611572565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561195b5761195b611932565b500190565b8581526001600160a01b0385811660208301526080604083018190528201849052600090848660a0850137600083860160a0908101919091529316606083015250601f909201601f1916909101019392505050565b6000828210156119c7576119c7611932565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611a3257611a32611932565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a5e57611a5e611a39565b500490565b600082611a7257611a72611a39565b500690565b634e487b7160e01b600052603260045260246000fd5b604081526000611aa0604083018561159e565b905060018060a01b03831660208301529392505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611aea9083018461159e565b9695505050505050565b600060208284031215611b0657600080fd5b81516109ba8161153f56fea26469706673582212205293307c67ee4f41007499bef11759ae0caf8b0362841f52e42d2f23cccb5fa964736f6c634300080b0033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
